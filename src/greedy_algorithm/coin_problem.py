# コイン問題
# 500円玉、100円玉、50円玉、5円玉、1円玉がa0, a1, a2, a3, a4, a5枚ある
# これらを用いてX円を支払いたい、支払いに用いるコインの合計枚数をなるべく少なくしたい
# 最小で何枚のコインで支払うことができるか
# そういった支払い方が少なくとも1つは存在する
# 
# 大きな額のコインから優先的に使うという考え方
# 最初に500円玉を出来るだけ多く使う

import math

# コインの金額
VALUE = [500, 100, 50, 10, 5, 1]

def main():
    X = 3453 # 上限金額
    
    a = [10, 10, 10, 10, 10, 10] # 各金額の枚数
    
    # 貪欲法
    result = 0
    for i in range(6):
        # 枚数制限がない場合の枚数
        add = math.floor(X / VALUE[i])
        
        # 枚数制限を考慮
        if add > a[i]: add = a[i]
        
        # 残り金額を求めて答えに枚数を加算する
        X -= VALUE[i] * add
        result += add
    
    print(result)

if __name__ == "__main__":
    main()